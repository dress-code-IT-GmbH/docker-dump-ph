pipeline {
    agent any
    /* hard coded proxy settings for eduldap-dev */
    environment {
        http_proxy='http://proxy.lfrz.at:8080'
        https_proxy='http://proxy.lfrz.at:8080'
        no_proxy='127.0.0.1,localhost,*.vie01.local'
    }
    stages {
        stage('Git pull + branch + submodule') {
            steps {
                sh '''
                #echo 'pulling updates'
                #git pull
                git submodule update --init
                cd ./dscripts && git checkout master && git pull && cd -
                '''
            }
        }
        stage('docker cleanup') {
            steps {
                sh './dscripts/manage.sh rm 2>/dev/null || true'
                sh './dscripts/manage.sh rmvol 2>/dev/null || true'
                sh 'sudo docker ps --all'
            }
        }
        stage('Build') {
            steps {
                sh '''
                echo 'Building ..'
                rm conf.sh 2> /dev/null || true
                ln -s conf.sh.default conf.sh
                ./dscripts/build.sh -p
                '''
            }
        }
        stage('Test with error msg') {
            steps {
                sh '''
                echo 'Provoking error ..'
                ./dscripts/run.sh -I | grep "invalid server"
                '''
            }
        }
        /*stage('Push to Registry') {
            when {
                environment name: ${env.has_docker_repo}, value: 'true'
            }
            steps {
                sh '''
                ./dscripts/manage.sh push
                '''
            }
        }*/
    }
    post {
        always {
            echo 'removing docker container and volumes'
            sh '''
            ./dscripts/manage.sh rm 2>&1 || true
            ./dscripts/manage.sh rmvol 2>&1
            '''
        }
    }
}
